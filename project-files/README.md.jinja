[![PyPI status](https://img.shields.io/pypi/status/{{ project_slug }}.svg)](https://pypi.python.org/pypi/{{ project_slug }}/)
[![PyPI version](https://img.shields.io/pypi/v/{{ project_slug }}.svg)](https://pypi.python.org/pypi/{{ project_slug }}/)
[![PyPI pyversions](https://img.shields.io/pypi/pyversions/{{ project_slug }}.svg)](https://pypi.python.org/pypi/{{ project_slug }}/)
[![Build Status](https://img.shields.io/endpoint.svg?url=https%3A%2F%2Factions-badge.atrox.dev%2F{{ github_user }}%{{ project_slug }}%2Fbadge%3Fref%3Ddevelop&style=flat)](https://actions-badge.atrox.dev/{{ github_user }}/{{ project_slug }}/goto?ref=develop)
[![Coverage Status](https://coveralls.io/repos/github/{{ github_user }}/{{ project_slug }}/badge.svg?branch=develop)](https://coveralls.io/github/{{ github_user }}/{{ project_slug }}?branch=develop)
[![Code style](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/ambv/black)

# {{ project_name }}

{{ project_short_description }}

 - Documentation: [https://{{ github_user }}.github.io/{{ project_slug }}](https://{{ github_user }}.github.io/{{ project_slug }})
 - Code: [https://github.com/{{ github_user }}/{{ project_slug }}](https://github.com/{{ github_user }}/{{ project_slug }})

## Description

TODO

## Development

### Requirements

- uv ( https://docs.astral.sh/uv/ )
- git
- make (on Linux / Mac OS X -- optional)
- just (optional)

### Check out the source code & enter the project directory

```
git clone https://github.com/{{ github_user }}/{{ project_slug }}
cd {{ project_slug }}
```

### Running pre-defined development-related tasks (using `just`)

The included `Makefile` file includes some useful tasks that help with development. This requires `uv` and the `make` tool to be
installed, which should be the case for Linux & Mac OS X systems.

- `just tests`: runs all unit tests
- `just test <pattern>`: runs all unit tests whose name matches the given pattern
- `just typecheck`: run type-checker
- `just lint`: run the `ruff` linter on the source code
- `just format`: run the `ruff` formatter on the source code (similar to `black`)

Alternatively, if you don't have the `just` command available, you can use `uv` directly to run those tasks:

- `uv run pytest tests`
- `uv run mypy src/`
- `uv run ruff check --fix src/`
- `uv run ruff format src/`

## Copyright & license

Copyright (c) {{ copyright_date }} - {{ full_name }}

{% if project_licenses | length == 1 %}
This project is published under the {{ project_licenses[0] }} license, for the license text please check the [LICENSE](/LICENSE) file in this repository.
{% else %}
This project is published under the following licenses, for the license texts please check the [LICENSE](/LICENSE) file in this repository:
{% for license in project_licenses %}
- {{ license }}
{% endfor %}
{% endif %}
